//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pinelabconsol.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PineLabsEntities3 : DbContext
    {
        public PineLabsEntities3()
            : base("name=PineLabsEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BillingAddress> BillingAddresses { get; set; }
        public virtual DbSet<CarteDetail> CarteDetails { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<JobEMAILQue> JobEMAILQues { get; set; }
        public virtual DbSet<JobEmailSetting> JobEmailSettings { get; set; }
        public virtual DbSet<JobFinalEmailQue> JobFinalEmailQues { get; set; }
        public virtual DbSet<JobFinalSMSQue> JobFinalSMSQues { get; set; }
        public virtual DbSet<JobSMSQue> JobSMSQues { get; set; }
        public virtual DbSet<JobSMSSetting> JobSMSSettings { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<order_card> order_card { get; set; }
        public virtual DbSet<order_product> order_product { get; set; }
        public virtual DbSet<OrderPayment> OrderPayments { get; set; }
        public virtual DbSet<ProductCategoryRelationTbl> ProductCategoryRelationTbls { get; set; }
        public virtual DbSet<ProductContentTbl> ProductContentTbls { get; set; }
        public virtual DbSet<ProductDenomination> ProductDenominations { get; set; }
        public virtual DbSet<ProductDiscount> ProductDiscounts { get; set; }
        public virtual DbSet<ProductList> ProductLists { get; set; }
        public virtual DbSet<ProductThemeTbl> ProductThemeTbls { get; set; }
        public virtual DbSet<RelatedProductList> RelatedProductLists { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<tblApiRequestResponse> tblApiRequestResponses { get; set; }
        public virtual DbSet<TblOrderRefNo> TblOrderRefNoes { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<WohooProductList> WohooProductLists { get; set; }
        public virtual DbSet<MessageApi> MessageApis { get; set; }
        public virtual DbSet<messgeApi> messgeApis { get; set; }
        public virtual DbSet<SmsApi> SmsApis { get; set; }
        public virtual DbSet<TempCategory> TempCategories { get; set; }
    
        public virtual ObjectResult<GetAllCategoryList_Result> GetAllCategoryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategoryList_Result>("GetAllCategoryList");
        }
    
        public virtual ObjectResult<string> GetAllChildCategoryList(string catId)
        {
            var catIdParameter = catId != null ?
                new ObjectParameter("catId", catId) :
                new ObjectParameter("catId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAllChildCategoryList", catIdParameter);
        }
    
        public virtual ObjectResult<string> GetAllParentCategoryList(string catId)
        {
            var catIdParameter = catId != null ?
                new ObjectParameter("catId", catId) :
                new ObjectParameter("catId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAllParentCategoryList", catIdParameter);
        }
    
        public virtual ObjectResult<GetCartListByUserId_Result> GetCartListByUserId(Nullable<decimal> uId)
        {
            var uIdParameter = uId.HasValue ?
                new ObjectParameter("uId", uId) :
                new ObjectParameter("uId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCartListByUserId_Result>("GetCartListByUserId", uIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCartProductCountByUserId(Nullable<decimal> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCartProductCountByUserId", useridParameter);
        }
    
        public virtual ObjectResult<GetCategoryListWithFilter_Result> GetCategoryListWithFilter(Nullable<int> pageNo, Nullable<int> noOfrecord)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(int));
    
            var noOfrecordParameter = noOfrecord.HasValue ?
                new ObjectParameter("noOfrecord", noOfrecord) :
                new ObjectParameter("noOfrecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryListWithFilter_Result>("GetCategoryListWithFilter", pageNoParameter, noOfrecordParameter);
        }
    
        public virtual int GetCountProductListWithFilter(string action, string value)
        {
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCountProductListWithFilter", actionParameter, valueParameter);
        }
    
        public virtual ObjectResult<GetEmailQue_Result> GetEmailQue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmailQue_Result>("GetEmailQue");
        }
    
        public virtual int GetImageBySku(string skuData)
        {
            var skuDataParameter = skuData != null ?
                new ObjectParameter("skuData", skuData) :
                new ObjectParameter("skuData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetImageBySku", skuDataParameter);
        }
    
        public virtual ObjectResult<GetProductDetailBySku_Result> GetProductDetailBySku(string skuData)
        {
            var skuDataParameter = skuData != null ?
                new ObjectParameter("skuData", skuData) :
                new ObjectParameter("skuData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductDetailBySku_Result>("GetProductDetailBySku", skuDataParameter);
        }
    
        public virtual int GetProductListWithFilter(Nullable<int> pageNo, Nullable<int> noOfrecord, string action, string value)
        {
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(int));
    
            var noOfrecordParameter = noOfrecord.HasValue ?
                new ObjectParameter("noOfrecord", noOfrecord) :
                new ObjectParameter("noOfrecord", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProductListWithFilter", pageNoParameter, noOfrecordParameter, actionParameter, valueParameter);
        }
    
        public virtual int getrootId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getrootId", idParameter);
        }
    
        public virtual ObjectResult<GetSMSQue_Result> GetSMSQue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSMSQue_Result>("GetSMSQue");
        }
    
        public virtual int InsertCategory(string recordXml)
        {
            var recordXmlParameter = recordXml != null ?
                new ObjectParameter("recordXml", recordXml) :
                new ObjectParameter("recordXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCategory", recordXmlParameter);
        }
    
        public virtual int InsertCategoryImageList(string recordXml)
        {
            var recordXmlParameter = recordXml != null ?
                new ObjectParameter("recordXml", recordXml) :
                new ObjectParameter("recordXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCategoryImageList", recordXmlParameter);
        }
    
        public virtual int InsertProductCategoryRelationList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductCategoryRelationList");
        }
    
        public virtual int InsertProductContent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductContent");
        }
    
        public virtual int InsertProductCurrencyList(string recordXml)
        {
            var recordXmlParameter = recordXml != null ?
                new ObjectParameter("recordXml", recordXml) :
                new ObjectParameter("recordXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductCurrencyList", recordXmlParameter);
        }
    
        public virtual int InsertProductDenomination()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductDenomination");
        }
    
        public virtual int InsertProductDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductDetail");
        }
    
        public virtual int InsertProductDiscounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductDiscounts");
        }
    
        public virtual int InsertProductImageList(string recordXml)
        {
            var recordXmlParameter = recordXml != null ?
                new ObjectParameter("recordXml", recordXml) :
                new ObjectParameter("recordXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductImageList", recordXmlParameter);
        }
    
        public virtual int InsertProductList(string recordXml)
        {
            var recordXmlParameter = recordXml != null ?
                new ObjectParameter("recordXml", recordXml) :
                new ObjectParameter("recordXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductList", recordXmlParameter);
        }
    
        public virtual int InsertProductTheme()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductTheme");
        }
    
        public virtual int InsertRelatedProductList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRelatedProductList");
        }
    
        public virtual int InsertWohooProductDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWohooProductDetail");
        }
    
        public virtual int InsertWohooProductImageDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWohooProductImageDetail");
        }
    
        public virtual ObjectResult<MyOrderReport_Result> MyOrderReport(Nullable<decimal> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MyOrderReport_Result>("MyOrderReport", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_BulkEmailDataInsert(string regXML)
        {
            var regXMLParameter = regXML != null ?
                new ObjectParameter("regXML", regXML) :
                new ObjectParameter("regXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_BulkEmailDataInsert", regXMLParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_BulkSMSDataInsert(string regXML)
        {
            var regXMLParameter = regXML != null ?
                new ObjectParameter("regXML", regXML) :
                new ObjectParameter("regXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_BulkSMSDataInsert", regXMLParameter);
        }
    
        public virtual ObjectResult<sp_getOrderStatus_Result> sp_getOrderStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getOrderStatus_Result>("sp_getOrderStatus");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_JobEmailQue(Nullable<int> formNo, string eMailBody, string emailId, string emailType, Nullable<int> companyId, string subject, string fromEmailID)
        {
            var formNoParameter = formNo.HasValue ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(int));
    
            var eMailBodyParameter = eMailBody != null ?
                new ObjectParameter("EMailBody", eMailBody) :
                new ObjectParameter("EMailBody", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var emailTypeParameter = emailType != null ?
                new ObjectParameter("EmailType", emailType) :
                new ObjectParameter("EmailType", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var fromEmailIDParameter = fromEmailID != null ?
                new ObjectParameter("FromEmailID", fromEmailID) :
                new ObjectParameter("FromEmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_JobEmailQue", formNoParameter, eMailBodyParameter, emailIdParameter, emailTypeParameter, companyIdParameter, subjectParameter, fromEmailIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_JobSMSQue(Nullable<int> formNo, string sMSBody, Nullable<decimal> mobileNo, string sMSType, Nullable<int> companyID)
        {
            var formNoParameter = formNo.HasValue ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(int));
    
            var sMSBodyParameter = sMSBody != null ?
                new ObjectParameter("SMSBody", sMSBody) :
                new ObjectParameter("SMSBody", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(decimal));
    
            var sMSTypeParameter = sMSType != null ?
                new ObjectParameter("SMSType", sMSType) :
                new ObjectParameter("SMSType", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_JobSMSQue", formNoParameter, sMSBodyParameter, mobileNoParameter, sMSTypeParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_MyOrderdetail_Result> Sp_MyOrderdetail(string orderId, string userid)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MyOrderdetail_Result>("Sp_MyOrderdetail", orderIdParameter, useridParameter);
        }
    
        public virtual ObjectResult<Sp_MyOrderReport_Result> Sp_MyOrderReport(Nullable<decimal> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MyOrderReport_Result>("Sp_MyOrderReport", userIdParameter);
        }
    
        public virtual ObjectResult<sp_SaveAPIRequest_Result> sp_SaveAPIRequest(string request, string response, string url)
        {
            var requestParameter = request != null ?
                new ObjectParameter("request", request) :
                new ObjectParameter("request", typeof(string));
    
            var responseParameter = response != null ?
                new ObjectParameter("response", response) :
                new ObjectParameter("response", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SaveAPIRequest_Result>("sp_SaveAPIRequest", requestParameter, responseParameter, urlParameter);
        }
    
        public virtual ObjectResult<Sp_UpdateOrderStatus_Result> Sp_UpdateOrderStatus(string action, string refNo, string activationCode, string activationUrl, string amount, string barcode, string cardid, string cardNumber, string enrptCardNo, string pinNo, string enrptCardPin, string labelProductName, string lableCardNumber, string lableCardPin, string lableValidity, string productSku, string productTheme, string recepientEmail, string validity, string status, string userId)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var activationCodeParameter = activationCode != null ?
                new ObjectParameter("activationCode", activationCode) :
                new ObjectParameter("activationCode", typeof(string));
    
            var activationUrlParameter = activationUrl != null ?
                new ObjectParameter("ActivationUrl", activationUrl) :
                new ObjectParameter("ActivationUrl", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var cardidParameter = cardid != null ?
                new ObjectParameter("cardid", cardid) :
                new ObjectParameter("cardid", typeof(string));
    
            var cardNumberParameter = cardNumber != null ?
                new ObjectParameter("CardNumber", cardNumber) :
                new ObjectParameter("CardNumber", typeof(string));
    
            var enrptCardNoParameter = enrptCardNo != null ?
                new ObjectParameter("EnrptCardNo", enrptCardNo) :
                new ObjectParameter("EnrptCardNo", typeof(string));
    
            var pinNoParameter = pinNo != null ?
                new ObjectParameter("PinNo", pinNo) :
                new ObjectParameter("PinNo", typeof(string));
    
            var enrptCardPinParameter = enrptCardPin != null ?
                new ObjectParameter("EnrptCardPin", enrptCardPin) :
                new ObjectParameter("EnrptCardPin", typeof(string));
    
            var labelProductNameParameter = labelProductName != null ?
                new ObjectParameter("LabelProductName", labelProductName) :
                new ObjectParameter("LabelProductName", typeof(string));
    
            var lableCardNumberParameter = lableCardNumber != null ?
                new ObjectParameter("LableCardNumber", lableCardNumber) :
                new ObjectParameter("LableCardNumber", typeof(string));
    
            var lableCardPinParameter = lableCardPin != null ?
                new ObjectParameter("LableCardPin", lableCardPin) :
                new ObjectParameter("LableCardPin", typeof(string));
    
            var lableValidityParameter = lableValidity != null ?
                new ObjectParameter("lableValidity", lableValidity) :
                new ObjectParameter("lableValidity", typeof(string));
    
            var productSkuParameter = productSku != null ?
                new ObjectParameter("ProductSku", productSku) :
                new ObjectParameter("ProductSku", typeof(string));
    
            var productThemeParameter = productTheme != null ?
                new ObjectParameter("ProductTheme", productTheme) :
                new ObjectParameter("ProductTheme", typeof(string));
    
            var recepientEmailParameter = recepientEmail != null ?
                new ObjectParameter("RecepientEmail", recepientEmail) :
                new ObjectParameter("RecepientEmail", typeof(string));
    
            var validityParameter = validity != null ?
                new ObjectParameter("Validity", validity) :
                new ObjectParameter("Validity", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_UpdateOrderStatus_Result>("Sp_UpdateOrderStatus", actionParameter, refNoParameter, activationCodeParameter, activationUrlParameter, amountParameter, barcodeParameter, cardidParameter, cardNumberParameter, enrptCardNoParameter, pinNoParameter, enrptCardPinParameter, labelProductNameParameter, lableCardNumberParameter, lableCardPinParameter, lableValidityParameter, productSkuParameter, productThemeParameter, recepientEmailParameter, validityParameter, statusParameter, userIdParameter);
        }
    
        public virtual ObjectResult<UpdateCartDetail_Result> UpdateCartDetail(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateCartDetail_Result>("UpdateCartDetail", useridParameter);
        }
    }
}
